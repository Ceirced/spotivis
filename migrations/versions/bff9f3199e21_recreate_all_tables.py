"""recreate all tables

Revision ID: bff9f3199e21
Revises: 
Create Date: 2025-10-04 20:08:35.494231

"""
from alembic import op
import sqlalchemy as sa
import flask_security


# revision identifiers, used by Alembic.
revision = 'bff9f3199e21'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('permissions', flask_security.datastore.AsaList(), nullable=True),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('user',
    sa.Column('fs_webauthn_user_handle', sa.String(length=64), nullable=True),
    sa.Column('mf_recovery_codes', flask_security.datastore.AsaList(), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('us_phone_number', sa.String(length=128), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('us_totp_secrets', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('fs_uniquifier', sa.String(length=64), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=64), nullable=True),
    sa.Column('current_login_ip', sa.String(length=64), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('tf_primary_method', sa.String(length=64), nullable=True),
    sa.Column('tf_totp_secret', sa.String(length=255), nullable=True),
    sa.Column('tf_phone_number', sa.String(length=128), nullable=True),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email')),
    sa.UniqueConstraint('fs_uniquifier', name=op.f('uq_user_fs_uniquifier')),
    sa.UniqueConstraint('fs_webauthn_user_handle', name=op.f('uq_user_fs_webauthn_user_handle')),
    sa.UniqueConstraint('us_phone_number', name=op.f('uq_user_us_phone_number')),
    sa.UniqueConstraint('username', name=op.f('uq_user_username'))
    )
    op.create_table('friend_request',
    sa.Column('request_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'declined', name='status_enum'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], name=op.f('fk_friend_request_receiver_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], name=op.f('fk_friend_request_sender_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('request_id', name=op.f('pk_friend_request'))
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_roles_users_role_id_role')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_roles_users_user_id_user'))
    )
    op.create_table('uploaded_files',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('data_start_date', sa.DateTime(), nullable=True),
    sa.Column('data_end_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_uploaded_files_user_id_user')),
    sa.PrimaryKeyConstraint('uuid', name=op.f('pk_uploaded_files'))
    )
    op.create_table('preprocessing_jobs',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=False),
    sa.Column('file_uuid', sa.String(length=36), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('edges_file', sa.String(length=500), nullable=True),
    sa.Column('nodes_file', sa.String(length=500), nullable=True),
    sa.Column('final_nodes', sa.Integer(), nullable=True),
    sa.Column('final_edges', sa.Integer(), nullable=True),
    sa.Column('time_periods', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['file_uuid'], ['uploaded_files.uuid'], name=op.f('fk_preprocessing_jobs_file_uuid_uploaded_files'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid', name=op.f('pk_preprocessing_jobs')),
    sa.UniqueConstraint('task_id', name=op.f('uq_preprocessing_jobs_task_id'))
    )
    op.create_table('combined_preprocessing_jobs',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('first_job_id', sa.String(length=36), nullable=False),
    sa.Column('second_job_id', sa.String(length=36), nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('edges_file', sa.String(length=500), nullable=True),
    sa.Column('nodes_file', sa.String(length=500), nullable=True),
    sa.Column('total_nodes', sa.Integer(), nullable=True),
    sa.Column('total_edges', sa.Integer(), nullable=True),
    sa.Column('nodes_from_first', sa.Integer(), nullable=True),
    sa.Column('nodes_from_second', sa.Integer(), nullable=True),
    sa.Column('new_nodes', sa.Integer(), nullable=True),
    sa.Column('first_start_date', sa.DateTime(), nullable=True),
    sa.Column('first_end_date', sa.DateTime(), nullable=True),
    sa.Column('second_start_date', sa.DateTime(), nullable=True),
    sa.Column('second_end_date', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['first_job_id'], ['preprocessing_jobs.uuid'], name=op.f('fk_combined_preprocessing_jobs_first_job_id_preprocessing_jobs'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['second_job_id'], ['preprocessing_jobs.uuid'], name=op.f('fk_combined_preprocessing_jobs_second_job_id_preprocessing_jobs'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_combined_preprocessing_jobs_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid', name=op.f('pk_combined_preprocessing_jobs')),
    sa.UniqueConstraint('task_id', name=op.f('uq_combined_preprocessing_jobs_task_id'))
    )
    op.create_table('playlist_enrichment_jobs',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=False),
    sa.Column('preprocessing_job_id', sa.String(length=36), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('output_file', sa.String(length=500), nullable=True),
    sa.Column('total_playlists', sa.Integer(), nullable=True),
    sa.Column('found_count', sa.Integer(), nullable=True),
    sa.Column('not_found_count', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['preprocessing_job_id'], ['preprocessing_jobs.uuid'], name=op.f('fk_playlist_enrichment_jobs_preprocessing_job_id_preprocessing_jobs')),
    sa.PrimaryKeyConstraint('uuid', name=op.f('pk_playlist_enrichment_jobs')),
    sa.UniqueConstraint('task_id', name=op.f('uq_playlist_enrichment_jobs_task_id'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('playlist_enrichment_jobs')
    op.drop_table('combined_preprocessing_jobs')
    op.drop_table('preprocessing_jobs')
    op.drop_table('uploaded_files')
    op.drop_table('roles_users')
    op.drop_table('friend_request')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
