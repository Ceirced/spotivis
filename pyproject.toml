[tool.poetry]
name = "spotivis"
version = "0.1.0"
description = ""
authors = ["Cederic Demoulin <cdemoulin@protonmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "3.13.7"
sqlalchemy = "^2.0.35"
flask = "^3.0.3"
flask-sqlalchemy = "^3.1.1"
flask-migrate = "^4.1.0"
flask-login = "^0.6.3"
posthog = "*"
stripe = "*"
python-dotenv = "^1.0.1"
pymysql = "^1.1.1"
flask-wtf = "^1.2.1"
bleach = "^6.1.0"
email-validator = "^2.2.0"
gunicorn = "^23.0.0"
flask-security = {extras = ["common", "fsqla"], version = "^5.6.1"}
setuptools = "^78.1.0"
celery = "^5.5.3"
redis = "^6.2.0"
flask-admin = {extras = ["sqlalchemy"], version = "^2.0.0a4"}
flask-htmx = "^0.4.0"
pyarrow = "^21.0.0"
pandas = "^2.3.1"
flask-caching = "^2.3.1"
loguru = "^0.7.3"
networkx = "^3.4.2"
tqdm = "^4.67.1"
spotipy = "^2.25.1"
psycopg2-binary = "^2.9.10"


[tool.poetry.group.dev.dependencies]
isort = "^6.0.1"
ipykernel = "^6.30.1"
celery-types = "^0.23.0"
pytest = "^8.4.1"
pyarrow-stubs = "^20.0.0.20250716"
pandas-stubs = "^2.3.0.250703"
types-tqdm = "^4.67.0.20250516"
types-networkx = "^3.5.0.20250728"
ruff = "*"
black = "*"
mypy = "^1.11.2"
types-flask = "^1.1.6"
pre-commit = "^4.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
exclude = ["migrations/"]

[[tool.mypy.overrides]]
module = [
    "flask_login.*",
    "flask_htmx.*",
    "spotipy.*",
    "flask_migrate.*",
    "flask_admin.*",
    "flask_security.*",
    "flask_mailman.*",
    "flask_caching.*",
    "flask_wtf.*"
]
ignore_missing_imports = true


[tool.ruff]
target-version = "py312"
exclude = ["migrations"]

[tool.ruff.lint]
select = [
  # see https://docs.astral.sh/ruff/rules/ for details
  "A", # flake8-builtins
  "ASYNC", # flake8-async
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "DJ", # flake8-django
  "E", # pycodestyle
  "F", # Pyflakes
  "FURB", # refurb
  "I", # isort
  "LOG", # flake8-logging
  "N", # pep8-naming
  "PERF", # Perflint
  "PTH", # flake8-use-pathlib
  "RSE", # flake8-raise
  "RUF", # Ruff-specific rules
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  "T20", # flake8-print
  "UP", # pyupgrade
  "W", # pycodestyle
]
ignore = [
  "E501", # line-too-long
  "RUF010", # explicit-f-string-type-conversion
  "RUF012", # mutable-class-default
  "SIM105", # suppressible-exception
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["app"]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.per-file-ignores]
"tests*.py" = [
  "S101", # allow asserts in tests
]

[tool.ruff.format]
quote-style = "double"